// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { __awaiter, __extends, __generator } from "tslib";
import { StorageClient } from "./StorageClient";
import { Share } from "./generated/src/operations";
/**
 * ShareClientInternal is the thin wrapper for Share which contains internal helper methods.
 */
var ShareClientInternal = /** @class */ (function (_super) {
    __extends(ShareClientInternal, _super);
    function ShareClientInternal(url, pipeline) {
        var _this = _super.call(this, url, pipeline) || this;
        _this.context = new Share(_this.storageClientContext);
        return _this;
    }
    ShareClientInternal.prototype.restore = function (options) {
        if (options === void 0) { options = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.context.restore(options)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return ShareClientInternal;
}(StorageClient));
export { ShareClientInternal };
//# sourceMappingURL=ShareClientInternal.js.map