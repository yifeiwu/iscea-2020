/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __extends } from "tslib";
import * as coreHttp from "@azure/core-http";
var packageName = "azure-storage-file-share";
var packageVersion = "12.6.0";
var StorageClientContext = /** @class */ (function (_super) {
    __extends(StorageClientContext, _super);
    /**
     * Initializes a new instance of the StorageClientContext class.
     * @param url The URL of the service account, share, directory or file that is the target of the
     *            desired operation.
     * @param options The parameter options
     */
    function StorageClientContext(url, options) {
        var _this = this;
        if (url === undefined) {
            throw new Error("'url' cannot be null");
        }
        // Initializing default values for options
        if (!options) {
            options = {};
        }
        if (!options.userAgent) {
            var defaultUserAgent = coreHttp.getDefaultUserAgentValue();
            options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
        }
        _this = _super.call(this, undefined, options) || this;
        _this.requestContentType = "application/json; charset=utf-8";
        _this.baseUri = options.endpoint || "{url}";
        // Parameter assignments
        _this.url = url;
        // Assigning values to Constant parameters
        _this.version = options.version || "2020-08-04";
        _this.fileRangeWriteFromUrl = options.fileRangeWriteFromUrl || "update";
        return _this;
    }
    return StorageClientContext;
}(coreHttp.ServiceClient));
export { StorageClientContext };
//# sourceMappingURL=storageClientContext.js.map